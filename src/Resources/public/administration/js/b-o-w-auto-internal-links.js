(function(){var e={314:function(){Shopware.Service("privileges").addPrivilegeMappingEntry({category:"permissions",parent:"marketing",key:"bow_auto_links",roles:{viewer:{privileges:["tag:read","bow_auto_links:read"],dependencies:[]},editor:{privileges:["tag:update","bow_auto_links:update"],dependencies:["bow_auto_links.viewer"]},creator:{privileges:["tag:create","bow_auto_links:create"],dependencies:["bow_auto_links.viewer","bow_auto_links.editor"]}}})}},t={};function n(a){var i=t[a];if(void 0!==i)return i.exports;var o=t[a]={exports:{}};return e[a](o,o.exports,n),o.exports}n.p="bundles/bowautointernallinks/",window?.__sw__?.assetPath&&(n.p=window.__sw__.assetPath+"/bundles/bowautointernallinks/"),function(){"use strict";let{Component:e,Mixin:t}=Shopware,{Criteria:a}=Shopware.Data;e.register("bow-tag-management",{template:'{% block bow_tag_management %}\n    <sw-card-view class="bow-tag-management">\n        {% block bow_tag_management_content %}\n            <sw-card \n                :isLoading="isLoading"\n                :large="true">\n                {% block bow_tag_management_content_grid %}\n                    <sw-data-grid\n                        :dataSource="tags"\n                        :columns="columns"\n                        :showSettings="true"\n                        :showSelection="false"\n                        :allowInlineEdit="true"\n                        :showActions="true">\n\n                        {% block bow_tag_management_grid_columns_priority %}\n                            <template #column-priority="{ item }">\n                                <sw-number-field\n                                    :value="item.customFields ? item.customFields.bowAutoLinks.priority : 1"\n                                    @change="updatePriority(item)"\n                                    :min="0"\n                                    :max="10"\n                                    :digits="1">\n                                </sw-number-field>\n                            </template>\n                        {% endblock %}\n\n                        {% block bow_tag_management_grid_actions %}\n                            <template #actions="{ item }">\n                                <sw-context-menu-item @click="onEditTag(item)">\n                                    {{ $tc(\'bow-tag-management.general.editTag\') }}\n                                </sw-context-menu-item>\n                                <sw-context-menu-item @click="onViewLinks(item)">\n                                    {{ $tc(\'bow-tag-management.general.viewLinks\') }}\n                                </sw-context-menu-item>\n                            </template>\n                        {% endblock %}\n                    </sw-data-grid>\n                {% endblock %}\n            </sw-card>\n        {% endblock %}\n    </sw-card-view>\n{% endblock %}\n',inject:["repositoryFactory","httpClient","syncService"],mixins:[t.getByName("notification")],data(){return{isLoading:!1,tags:[],tagStats:{},columns:[{property:"name",label:this.$tc("bow-tag-management.list.columnName"),routerLink:"sw.tag.detail",primary:!0,visible:!0,rawData:!0,inlineEdit:"string"},{property:"products",label:this.$tc("bow-tag-management.list.columnProducts"),visible:!0,sortable:!1,data:e=>e.products?e.products.length:0},{property:"categories",label:this.$tc("bow-tag-management.list.columnCategories"),visible:!0,sortable:!1,data:e=>e.categories?e.categories.length:0},{property:"tagStats",label:this.$tc("bow-tag-management.list.columnLinks"),visible:!0,sortable:!1,data:e=>this.tagStats[e.id]?this.tagStats[e.id].linkCount:0},{property:"priority",label:this.$tc("bow-tag-management.list.columnPriority"),visible:!0,inlineEdit:"number"}]}},computed:{tagRepository(){return this.repositoryFactory.create("tag")}},created(){this.createdComponent()},methods:{createdComponent(){this.loadTags()},async loadTags(){this.isLoading=!0;let e=new a;e.addAssociation("products"),e.addAssociation("categories"),e.addAssociation("customFields");try{let t=await this.tagRepository.search(e,Shopware.Context.api);this.tags=t,await this.loadTagStats()}catch(e){this.createNotificationError({title:"Error",message:e.message})}finally{this.isLoading=!1}},async loadTagStats(){try{let e=await this.httpClient.get("/_action/bow-auto-links/tag-stats",{headers:this.syncService.getBasicHeaders()});this.tagStats=e.data}catch(e){this.createNotificationError({title:"Error",message:e.message})}},async updatePriority(e){try{await this.httpClient.post(`/_action/bow-auto-links/tag-priority/${e.id}`,{priority:e.priority},{headers:this.syncService.getBasicHeaders()}),this.createNotificationSuccess({title:"Success",message:"Priority updated successfully"})}catch(e){this.createNotificationError({title:"Error",message:e.message})}},onEditTag(e){this.$router.push({name:"sw.tag.detail",params:{id:e.id}})},onViewLinks(e){this.$router.push({name:"bow.tag.management.index.logs",query:{tagId:e.id}})}}});let{Component:i,Mixin:o}=Shopware;i.register("bow-log-viewer",{template:'{% block bow_log_viewer %}\n    <sw-card-view class="bow-log-viewer">\n        {% block bow_log_viewer_content %}\n            <sw-card \n                :isLoading="isLoading"\n                :large="true">\n                {% block bow_log_viewer_content_grid %}\n                    <sw-data-grid\n                        :dataSource="logStats"\n                        :columns="columns"\n                        :showSettings="true"\n                        :showSelection="false">\n                    </sw-data-grid>\n                {% endblock %}\n            </sw-card>\n        {% endblock %}\n    </sw-card-view>\n{% endblock %}\n',inject:["repositoryFactory","httpClient","syncService"],mixins:[o.getByName("notification")],data(){return{isLoading:!1,logStats:null,columns:[{property:"type",label:this.$tc("bow-tag-management.list.columnType"),visible:!0,rawData:!0},{property:"count",label:this.$tc("bow-tag-management.list.columnCount"),visible:!0,rawData:!0,align:"right"}]}},created(){this.createdComponent()},methods:{createdComponent(){this.loadLogStats()},async loadLogStats(){this.isLoading=!0;try{let e=await this.httpClient.get("/_action/bow-auto-links/log-stats",{headers:this.syncService.getBasicHeaders()}),t=e.data?.generationsByType||{};this.logStats=Object.entries(t).map(([e,t])=>({type:e||"unknown",count:t||0}))}catch(e){this.createNotificationError({title:"Error",message:e.message}),this.logStats=[]}finally{this.isLoading=!1}}}});let{Component:s}=Shopware;s.register("bow-tag-management-index",{template:"{% block bow_tag_management_index %}\n    <sw-page class=\"bow-tag-management\">\n        {% block bow_tag_management_smart_bar %}\n            <template #smart-bar-header>\n                <h2>{{ $tc('bow-tag-management.general.mainMenuItemGeneral') }}</h2>\n            </template>\n        {% endblock %}\n\n        {% block bow_tag_management_content %}\n            <template #content>\n                <sw-container>\n                    <sw-tabs position-identifier=\"bow-tag-management-tabs\">\n                        <sw-tabs-item \n                            :route=\"{ name: 'bow.tag.management.index.index' }\"\n                            :active=\"$route.name === 'bow.tag.management.index.index'\">\n                            {{ $tc('bow-tag-management.general.mainMenuItemGeneral') }}\n                        </sw-tabs-item>\n                        <sw-tabs-item \n                            :route=\"{ name: 'bow.tag.management.index.logs' }\"\n                            :active=\"$route.name === 'bow.tag.management.index.logs'\">\n                            {{ $tc('bow-tag-management.general.logs') }}\n                        </sw-tabs-item>\n                    </sw-tabs>\n                </sw-container>\n                <router-view></router-view>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n",metaInfo(){return{title:this.$tc("bow-tag-management.general.mainMenuItemGeneral")}}}),n(314);var r=JSON.parse('{"bow-tag-management":{"general":{"mainMenuItemGeneral":"Auto Internal Links","descriptionTextModule":"Manage tag-based internal linking","refresh":"Refresh","priority":"Priority","statistics":"Statistics","logs":"Logs","editTag":"Edit tag","viewLinks":"View links"},"list":{"columnName":"Name","columnProducts":"Products","columnCategories":"Categories","columnLinks":"Auto Links","columnPriority":"Priority","columnType":"Type","columnCount":"Count"}}}'),l=JSON.parse('{"bow-tag-management":{"general":{"mainMenuItemGeneral":"Auto-Interne Links","descriptionTextModule":"Tag-basierte interne Verlinkung verwalten","refresh":"Aktualisieren","priority":"Priorit\xe4t","statistics":"Statistiken","logs":"Logs","editTag":"Tag bearbeiten","viewLinks":"Links anzeigen"},"list":{"columnName":"Name","columnProducts":"Produkte","columnCategories":"Kategorien","columnLinks":"Auto-Links","columnPriority":"Priorit\xe4t","columnType":"Typ","columnCount":"Anzahl"}}}');Shopware.Application.addServiceProviderDecorator("snippetService",e=>(e.extend("en-GB",r),e.extend("de-DE",l),e)),Shopware.Module.register("bow-tag-management",{type:"plugin",name:"BOW Auto Internal Links",title:"bow-tag-management.general.mainMenuItemGeneral",description:"bow-tag-management.general.descriptionTextModule",color:"#ff3d58",icon:"default-shopping-paper-bag-product",routes:{index:{component:"bow-tag-management-index",path:"index",meta:{privilege:"bow_auto_links.viewer",parentPath:"sw.marketing.index"},children:{index:{component:"bow-tag-management",path:"index",meta:{privilege:"bow_auto_links.viewer",parentPath:"sw.marketing.index"}},logs:{component:"bow-log-viewer",path:"logs",meta:{privilege:"bow_auto_links.viewer",parentPath:"sw.marketing.index"}}}}},navigation:[{id:"bow-tag-management",path:"bow.tag.management.index.index",label:"bow-tag-management.general.mainMenuItemGeneral",parent:"sw-marketing",privilege:"bow_auto_links.viewer",position:100}]})}()})();